// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Currency converter redux connected component should render with the default state from Redux store 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "rgb(232, 228, 253)",
      "flex": 1,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "paddingBottom": 10,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 10,
        },
        Object {
          "paddingBottom": 0,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "white",
          "borderRadius": 10,
          "marginBottom": 5,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCompleteType="off"
        autoCorrect={false}
        keyboardType="decimal-pad"
        onChangeText={[Function]}
        rejectResponderTermination={true}
        style={
          Object {
            "borderColor": "rgb(232, 228, 253)",
            "borderRadius": 10,
            "borderWidth": 1,
            "fontSize": 24,
            "height": 40,
            "marginLeft": 5,
            "marginRight": 5,
            "marginTop": 5,
            "padding": 5,
          }
        }
        testID="valueInput"
        underlineColorAndroid="transparent"
        value="1"
      />
      <View>
        <RCTPicker
          items={
            Array [
              Object {
                "label": "Danmark",
                "textColor": undefined,
                "value": "DKK",
              },
              Object {
                "label": "India",
                "textColor": undefined,
                "value": "INR",
              },
              Object {
                "label": "US",
                "textColor": undefined,
                "value": "USD",
              },
              Object {
                "label": "Thailand",
                "textColor": undefined,
                "value": "THB",
              },
              Object {
                "label": "Sri Lanka",
                "textColor": undefined,
                "value": "LKR",
              },
            ]
          }
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          selectedIndex={0}
          style={
            Array [
              Object {
                "height": 216,
              },
              undefined,
            ]
          }
        />
      </View>
      <View
        style={
          Object {
            "height": 50,
            "paddingLeft": 10,
            "paddingRight": 10,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityStates={Array []}
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="convertButton"
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontSize": 18,
                    "padding": 8,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "rgb(95, 80, 181)",
                  },
                ]
              }
            >
              Convert
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "white",
          "borderRadius": 10,
          "padding": 5,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "rgba(95, 80, 181, 0.8)",
            "fontSize": 24,
          }
        }
        testID="fromText"
      >
        €1.00 = 
      </Text>
      <Text
        style={
          Object {
            "color": "rgb(95, 80, 181)",
            "fontSize": 36,
          }
        }
        testID="toText"
      >
        DKK 0.00
      </Text>
      <Text
        style={
          Object {
            "fontSize": 12,
          }
        }
      >
        Click convert
      </Text>
    </View>
  </View>
</RCTSafeAreaView>
`;
